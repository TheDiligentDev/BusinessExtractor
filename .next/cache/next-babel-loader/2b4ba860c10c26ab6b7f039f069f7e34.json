{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rswl8\\\\Documents\\\\GitRepos\\\\Business Extractor\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { FormControl, FormLabel, FormGroup, FormControlLabel, TextField, Button } from '@material-ui/core';\n\nvar HomePage = function HomePage() {\n  var _useState = useState({\n    businessType: '',\n    zipCode: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread({}, state, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  return __jsx(FormControl, {\n    component: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Enter a Business Type and Zip Code to Search\"), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    control: __jsx(TextField, {\n      onChange: handleChange('businessType'),\n      value: \"businessType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    label: \"Business Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    control: __jsx(TextField, {\n      onChange: handleChange('zipCode'),\n      value: \"zipCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    label: \"Zip Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/rswl8/Documents/GitRepos/Business Extractor/pages/index.js"],"names":["React","FormControl","FormLabel","FormGroup","FormControlLabel","TextField","Button","HomePage","useState","businessType","zipCode","state","setState","handleChange","name","event","target","value"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,gBAA5C,EAA8DC,SAA9D,EAAyEC,MAAzE,QAAuF,mBAAvF;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACOC,QAAQ,CAAC;AAC/BC,IAAAA,YAAY,EAAE,EADiB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CADf;AAAA;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAMnB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,WAAI,UAAAC,KAAK,EAAI;AAClCH,MAAAA,QAAQ,mBAAMD,KAAN,sBAAcG,IAAd,EAAqBC,KAAK,CAACC,MAAN,CAAaC,KAAlC,GAAR;AACH,KAFwB;AAAA,GAAzB;;AAIA,SACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACI,IAAA,OAAO,EAAE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAEJ,YAAY,CAAC,cAAD,CAAjC;AAAmD,MAAA,KAAK,EAAC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,KAAK,EAAC,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,gBAAD;AACI,IAAA,OAAO,EAAE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA,YAAY,CAAC,SAAD,CAAjC;AAA8C,MAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,KAAK,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EASI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CAFJ,CADJ;AAkBH,CA5BD;;AA8BA,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\nimport { FormControl, FormLabel, FormGroup, FormControlLabel, TextField, Button } from '@material-ui/core';\r\n\r\n\r\nconst HomePage = () => {\r\n    const [state, setState] = useState({\r\n        businessType: '',\r\n        zipCode: ''\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.value })\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Enter a Business Type and Zip Code to Search</FormLabel>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={<TextField onChange={handleChange('businessType')} value=\"businessType\" />}\r\n                    label=\"Business Type\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<TextField onChange={handleChange('zipCode')} value=\"zipCode\" />}\r\n                    label=\"Zip Code\"\r\n                />\r\n                <Button>\r\n                    Submit\r\n                </Button>\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}